{"ast":null,"code":"var _jsxFileName = \"/Users/NandhiniKarvendhan/Build A Formik Form/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      userName: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      alert(\"Login Successful\");\n      console.log(\"form: \", values);\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.userName) errors.userName = \"Field required\";\n\n      if (!/\\S+@\\S+\\.\\S+/.test(values.userName)) {\n        errors.userName = \"Username should be an email\";\n      }\n\n      if (!values.password) errors.password = \"Field required\";\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"userName\",\n        id: \"emailField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        values: \"formik.values.userName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), formik.errors.userName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        style: {\n          color: \"red\"\n        },\n        children: formik.errors.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        id: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        values: \"formik.values.password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        style: {\n          color: \"red\"\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitBtn\",\n        type: \"submit\" // onChange={formik.handleChange}\n        // values={formik.errors}\n        ,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useFormik","App","formik","initialValues","userName","password","onSubmit","values","alert","console","log","validate","errors","test","handleSubmit","handleChange","color"],"sources":["/Users/NandhiniKarvendhan/Build A Formik Form/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useFormik } from \"formik\";\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      userName: \"\",\n      password: \"\",\n    },\n    onSubmit: (values) => {\n      alert(\"Login Successful\");\n      console.log(\"form: \", values);\n    },\n    validate: (values) => {\n      let errors = {};\n      if (!values.userName) errors.userName = \"Field required\";\n      if (!/\\S+@\\S+\\.\\S+/.test(values.userName)) {\n        errors.userName = \"Username should be an email\";\n      }\n      if (!values.password) errors.password = \"Field required\";\n\n      return errors;\n    },\n  });\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Username</div>\n        <input\n          name=\"userName\"\n          id=\"emailField\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          values=\"formik.values.userName\"\n        />\n        {formik.errors.userName ? (\n          <div id=\"emailError\" style={{ color: \"red\" }}>\n            {formik.errors.userName}\n          </div>\n        ) : null}\n        <div>Password</div>\n        <input\n          name=\"password\"\n          id=\"pswField\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          values=\"formik.values.password\"\n        />\n        {formik.errors.password ? (\n          <div id=\"pswError\" style={{ color: \"red\" }}>\n            {formik.errors.password}\n          </div>\n        ) : null}\n        <br />\n        <button\n          id=\"submitBtn\"\n          type=\"submit\"\n          // onChange={formik.handleChange}\n          // values={formik.errors}\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,QAA0B,QAA1B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,MAAM,GAAGF,SAAS,CAAC;IACvBG,aAAa,EAAE;MACbC,QAAQ,EAAE,EADG;MAEbC,QAAQ,EAAE;IAFG,CADQ;IAKvBC,QAAQ,EAAGC,MAAD,IAAY;MACpBC,KAAK,CAAC,kBAAD,CAAL;MACAC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;IACD,CARsB;IASvBI,QAAQ,EAAGJ,MAAD,IAAY;MACpB,IAAIK,MAAM,GAAG,EAAb;MACA,IAAI,CAACL,MAAM,CAACH,QAAZ,EAAsBQ,MAAM,CAACR,QAAP,GAAkB,gBAAlB;;MACtB,IAAI,CAAC,eAAeS,IAAf,CAAoBN,MAAM,CAACH,QAA3B,CAAL,EAA2C;QACzCQ,MAAM,CAACR,QAAP,GAAkB,6BAAlB;MACD;;MACD,IAAI,CAACG,MAAM,CAACF,QAAZ,EAAsBO,MAAM,CAACP,QAAP,GAAkB,gBAAlB;MAEtB,OAAOO,MAAP;IACD;EAlBsB,CAAD,CAAxB;EAoBA,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEV,MAAM,CAACY,YAAvB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,UADP;QAEE,EAAE,EAAC,YAFL;QAGE,IAAI,EAAC,MAHP;QAIE,QAAQ,EAAEZ,MAAM,CAACa,YAJnB;QAKE,MAAM,EAAC;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASGb,MAAM,CAACU,MAAP,CAAcR,QAAd,gBACC;QAAK,EAAE,EAAC,YAAR;QAAqB,KAAK,EAAE;UAAEY,KAAK,EAAE;QAAT,CAA5B;QAAA,UACGd,MAAM,CAACU,MAAP,CAAcR;MADjB;QAAA;QAAA;QAAA;MAAA,QADD,GAIG,IAbN,eAcE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF,eAeE;QACE,IAAI,EAAC,UADP;QAEE,EAAE,EAAC,UAFL;QAGE,IAAI,EAAC,MAHP;QAIE,QAAQ,EAAEF,MAAM,CAACa,YAJnB;QAKE,MAAM,EAAC;MALT;QAAA;QAAA;QAAA;MAAA,QAfF,EAsBGb,MAAM,CAACU,MAAP,CAAcP,QAAd,gBACC;QAAK,EAAE,EAAC,UAAR;QAAmB,KAAK,EAAE;UAAEW,KAAK,EAAE;QAAT,CAA1B;QAAA,UACGd,MAAM,CAACU,MAAP,CAAcP;MADjB;QAAA;QAAA;QAAA;MAAA,QADD,GAIG,IA1BN,eA2BE;QAAA;QAAA;QAAA;MAAA,QA3BF,eA4BE;QACE,EAAE,EAAC,WADL;QAEE,IAAI,EAAC,QAFP,CAGE;QACA;QAJF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA5BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAyCD;;GA9DQJ,G;UACQD,S;;;KADRC,G;AAgET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}